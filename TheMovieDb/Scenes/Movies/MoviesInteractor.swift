//
//  MoviesInteractor.swift
//  TheMovieDb
//
//  Created by Marcio Habigzang Brufatto on 16/10/19.
//  Copyright (c) 2019 Marcio Habigzang Brufatto. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MoviesBusinessLogic {
    func doLoadMovies(request: MoviesScene.Load.Request)
    func doLoadMovieDetail(request: MoviesScene.MoviesToMovie.Request)
}

protocol MoviesDataStore {
    var movies: [Movie]? { get set }
    var movie: Movie? { get set }
    var totalPages: Int? { get set }
    var totalResults: Int? { get set }
}

class MoviesInteractor: MoviesBusinessLogic, MoviesDataStore {
    var presenter: MoviesPresentationLogic?
    var worker: MoviesWorker?
    var movies: [Movie]?
    var movie: Movie?
    var totalPages: Int?
    var totalResults: Int?
    
    func doLoadMovies(request: MoviesScene.Load.Request) {
        worker = MoviesWorker()
        if request.currentPage > 1 {
            worker?.doRequestMovies(page: request.currentPage, completion: { movieBase in
                self.movies = movieBase.movies
                self.totalPages = movieBase.totalPages
                self.totalResults = movieBase.totalResults
                let response = MoviesScene.Load.Response(totalPages: self.totalPages!, totalResults: self.totalResults!, movies: self.movies!)
                self.presenter?.presentMovies(response: response)
            })
        } else {
            let response = MoviesScene.Load.Response(totalPages: totalPages!, totalResults: totalResults!, movies: movies!)
            presenter?.presentMovies(response: response)
        }
    }
    
    func doLoadMovieDetail(request: MoviesScene.MoviesToMovie.Request) {
        self.movie = request.movie
        let response = MoviesScene.MoviesToMovie.Response(movie: request.movie)
        presenter?.presentMovieDetail(response: response)
    }
}
